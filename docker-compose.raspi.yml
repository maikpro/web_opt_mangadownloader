name: raspi-web-opt-downloader
services:
    mongodb:
        container_name: web-opt-downloader-mongodb
        image: mongo:4.4.18
        ports:
            - '27017:27017'
        volumes:
            - web-opt-mongodb_data:/data/db

    backend:
        container_name: web-opt-downloader-backend
        build: ./backend
        ports:
            - '8080:8080'
        environment:
            - SERVER_PORT=8080
            - MONGODB_CONNECTION_STRING=mongodb://mongodb:27017
            - MONGODB_DATABASE_STRING=opt-mangadownloader-database
            - MONGODB_COLLECTION_SETTINGS_STRING=opt-mangadownloader-settings
            - ORIGIN_URL=*
        depends_on:
            - mongodb

    frontend:
        container_name: web-opt-downloader-frontend
        build: ./frontend
        ports:
            - '3000:3000'
        environment:
            #Note: After being built, your app will no longer respond to changes to these environment variables. For instance, if you use a Heroku pipeline to promote slugs built in one environment to another environment, or if you build and deploy a single Docker image to multiple environments, all NEXT_PUBLIC_ variables will be frozen with the value evaluated at build time, so these values need to be set appropriately when the project is built. If you need access to runtime environment values, you'll have to setup your own API to provide them to the client (either on demand or during initialization). https://nextjs.org/docs/pages/building-your-application/configuring/environment-variables#bundling-environment-variables-for-the-browser
            - NODE_ENV=production
        depends_on:
            - backend

volumes:
    web-opt-mongodb_data:

networks:
    web-opt-network:
        driver: bridge
